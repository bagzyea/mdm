generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id              String   @id @default(cuid())
  deviceId        String   @unique
  manufacturer    String
  model           String
  androidVersion  String
  sdkVersion      Int
  fingerprint     String   @unique
  status          DeviceStatus @default(ENROLLED)
  enrolledAt      DateTime @default(now())
  lastSeen        DateTime @default(now())
  location        Json?
  assignedTo      String?
  policies        Policy[]
  commands        RemoteCommand[]
  events          DeviceEvent[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Policy {
  id              String   @id @default(cuid())
  name            String
  description     String
  type            PolicyType
  rules           Json
  targetDevices   String[]
  priority        Int      @default(0)
  isActive        Boolean  @default(true)
  devices         Device[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model RemoteCommand {
  id              String   @id @default(cuid())
  deviceId        String
  command         String
  parameters      Json?
  status          CommandStatus @default(PENDING)
  result          Json?
  device          Device   @relation(fields: [deviceId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model DeviceEvent {
  id              String   @id @default(cuid())
  deviceId        String
  eventType       String
  eventData       Json?
  device          Device   @relation(fields: [deviceId], references: [id])
  createdAt       DateTime @default(now())
}

enum DeviceStatus {
  ENROLLED
  ACTIVE
  INACTIVE
  SUSPENDED
  WIPED
}

enum PolicyType {
  SECURITY
  NETWORK
  APPLICATION
  COMPLIANCE
}

enum CommandStatus {
  PENDING
  SENT
  EXECUTED
  FAILED
  CANCELLED
}